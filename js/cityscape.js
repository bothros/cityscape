// Generated by CoffeeScript 1.3.2-pre
(function() {
  var randColor, randNum, useLayer;

  useLayer = (function() {
    var layerReg;
    layerReg = {
      'sky': new Layer,
      'background': new Layer,
      'foreground': new Layer
    };
    return function(layerName) {
      return function(fn) {
        layerReg[layerName].activate();
        return fn();
      };
    };
  })();

  randColor = function() {
    var i, letters;
    letters = '0123456789ABCDEF'.split('');
    return '#' + ((function() {
      var _i, _results;
      _results = [];
      for (i = _i = 1; _i <= 6; i = ++_i) {
        _results.push(letters[Math.round(Math.random() * 15)]);
      }
      return _results;
    })()).join('');
  };

  randNum = function(min, max) {
    return Math.floor((Math.random() * (max - min + 1)) + min);
  };

  useLayer('foreground')(function() {
    var street;
    street = new Path;
    street.strokeColor = 'black';
    street.strokeWidth = 10;
    street.add(new Point(view.bounds.left, view.bounds.bottom));
    return street.add(new Point(view.bounds.right, view.bounds.bottom));
  });

  useLayer('background')(function() {
    var building, i, numbuildings, pos, size, _i, _results;
    numbuildings = 150;
    _results = [];
    for (i = _i = 0; 0 <= numbuildings ? _i <= numbuildings : _i >= numbuildings; i = 0 <= numbuildings ? ++_i : --_i) {
      size = new Size([randNum(10, 50), randNum(20, 120)]);
      pos = new Point([randNum(view.bounds.left, view.bounds.right - size.width), view.bounds.bottom - size.height]);
      building = new Path.Rectangle(pos, size);
      building.strokeColor = 'black';
      building.fillColor = randColor();
      _results.push(building);
    }
    return _results;
  });

  useLayer('sky')(function() {
    var sky, skyGrad;
    sky = new Path.Rectangle(view.bounds);
    skyGrad = new Gradient(['darkblue', 'darkred', 'red']);
    return sky.fillColor = new GradientColor(skyGrad, view.bounds.topCenter, view.bounds.bottomCenter);
  });

}).call(this);
